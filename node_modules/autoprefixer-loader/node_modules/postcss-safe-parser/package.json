{
  "_args": [
    [
      {
        "raw": "postcss-safe-parser@https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
        "scope": null,
        "escapedName": "postcss-safe-parser",
        "name": "postcss-safe-parser",
        "rawSpec": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
        "spec": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
        "type": "remote"
      },
      "C:\\Users\\Daniel\\Documents\\GitHub\\RobotsReact"
    ]
  ],
  "_from": "postcss-safe-parser@>=1.0.1 <2.0.0",
  "_id": "postcss-safe-parser@1.0.1",
  "_inCache": true,
  "_location": "/autoprefixer-loader/postcss-safe-parser",
  "_phantomChildren": {},
  "_requested": {
    "raw": "postcss-safe-parser@https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
    "scope": null,
    "escapedName": "postcss-safe-parser",
    "name": "postcss-safe-parser",
    "rawSpec": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
    "spec": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/autoprefixer-loader"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
  "_shasum": "c11b9d8c90bf83c20394aa032c79fb5a0dc2334d",
  "_shrinkwrap": null,
  "_spec": "postcss-safe-parser@https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-1.0.1.tgz",
  "_where": "C:\\Users\\Daniel\\Documents\\GitHub\\RobotsReact",
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-safe-parser/issues"
  },
  "dependencies": {
    "postcss": "^5.0.3"
  },
  "description": "Fault-tolerant CSS parser for PostCSS",
  "devDependencies": {
    "babel-core": "5.8.23",
    "babel-eslint": "4.1.0",
    "chai": "3.2.0",
    "del": "1.2.1",
    "gulp": "3.9.0",
    "gulp-babel": "5.2.1",
    "gulp-eslint": "1.0.0",
    "gulp-json-editor": "2.2.1",
    "gulp-mocha": "2.1.3",
    "mocha": "2.2.5",
    "postcss-parser-tests": "5.0.1"
  },
  "homepage": "https://github.com/postcss/postcss-safe-parser#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-syntax",
    "parser",
    "fault tolerant"
  ],
  "license": "MIT",
  "main": "lib/safe-parse",
  "name": "postcss-safe-parser",
  "optionalDependencies": {},
  "readme": "# PostCSS Safe Parser [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA fault-tolerant CSS parser for [PostCSS], which will find & fix syntax errors,\ncapable of parsing any input. It is useful for:\n\n* Parse legacy code with many hacks. For example, it can parse all examples\n  from [Browserhacks].\n* Works with demo tools with live input like [Autoprefixer demo].\n\n[Autoprefixer demo]: http://simevidas.jsbin.com/gufoko/quiet\n[Browserhacks]:      http://browserhacks.com/\n[PostCSS]:           https://github.com/postcss/postcss\n[ci-img]:            https://img.shields.io/travis/postcss/postcss-safe-parser.svg\n[ci]:                https://travis-ci.org/postcss/postcss-safe-parser\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Usage\n\n```js\nvar safe   = require('postcss-safe-parser');\nvar badCss = 'a {';\n\npostcss(plugins).process(badCss, { parser: safe }).then(function (result) {\n    result.css //= 'a {}'\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-safe-parser.git"
  },
  "scripts": {
    "test": "gulp"
  },
  "version": "1.0.1"
}
